package Vn.Synchronize {
	// Класс "Синхронизация с сервером"
	// В массив заносятся указатели на функции и период, с какой частотой их выполнять
	// при Sinchronize все функции из массива выполняются в соответствии с периодом
//-----------------------------------------------------------------------------------------------------
	import flash.utils.getTimer;	// Таймер
//-----------------------------------------------------------------------------------------------------
	public class ServerSynchronizer {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		private var SyncList:Array;	// Массив синхронизации: через сколько времени / время последнего раза / указатель на выполняемую функцию
		private var LastTime:Number;	// Время последнего обращения
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function ServerSynchronizer() {
			// Конструктор родителя
//			super();
			// Конструторк
			SyncList = new Array(0);
			LastTime = getTimer();
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		public function _delete():void {
			// Деструктор
			// Очистить массив
			for(var i:uint=0;i<SyncList.length;) {
				SyncList[i].splice(0);
				SyncList.splice(i,1);
			}
			SyncList = null;
			// Деструктор родителя
//			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		public function Add(Period:Number,Func:Function):void {
			// Добавить функцию для синхронизации в массив
			// Проверить не добавлялась ли ранее
			var AlwaysAdded:Boolean = false;
			for(var i:uint=0;i<SyncList.length;i++) {
				if (SyncList[i][2] == Func) {
					AlwaysAdded = true;
					break;
				}
			}
			// Если нет - добавить
			if(AlwaysAdded==false) SyncList.push([Period,0.0,Func]);
		}
//-----------------------------------------------------------------------------------------------------
		public function Remove(Func:Function):void {
			// Удалить функцию для синхронизации из массива
			for(var i:uint=0;i<SyncList.length;i++) {
				if(SyncList[i][2]==Func) {
					// Удалить из массива
					SyncList[i].splice(0);
					SyncList.splice(i,1);
					break;
				}
			}
		}
//-----------------------------------------------------------------------------------------------------
		public function Synchronize():void {
			// Выполнить вызов функций из массива синхронизации
			var CurrentTime:Number = getTimer();
			var DeltaTime:Number = CurrentTime - LastTime;
			for(var i:uint=0;i<SyncList.length;i++) {
				// Для каждой функции
				SyncList[i][1] += DeltaTime;
				if(SyncList[i][1]>=SyncList[i][0]) {
					// Выполнить функцию синхронизации
					SyncList[i][2]();
					SyncList[i][1] = SyncList[i][1]-SyncList[i][0];
				}
//				trace(SyncList[i][0]+" - "+SyncList[i][1]);
			}
			LastTime = CurrentTime;
		}
//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------
	}
}