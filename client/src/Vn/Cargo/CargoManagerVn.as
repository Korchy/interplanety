package Vn.Cargo {
//-----------------------------------------------------------------------------------------------------
// Менеджер грузов на корабле
//-----------------------------------------------------------------------------------------------------
	import Vn.List.ObjectsListLVn;
//-----------------------------------------------------------------------------------------------------
	public class CargoManagerVn extends ObjectsListLVn {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		private var lOwner:Object;	// Указатель на планету/корабль
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function CargoManagerVn(vOwner:Object) {
			// Конструктор родителя
			super();
			// Конструктор
			lOwner = vOwner;
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			lOwner = null;
			// Деструктор родителя
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		public function cargoCount(vCargoType:uint):uint {
			// Возврат количества груза типа vCargoType
			var count:uint = 0;
			for each(var currentCargo:CargoVn in All) {
				if (currentCargo.Type == vCargoType) count += currentCargo.Volume;
			}
			return count;
		}
//-----------------------------------------------------------------------------------------------------
		public function cargoByTypes():Array {
			// Возвращает массив с информацией о количестве грузов по типам
			var cargoByTypesArray:Array = new Array();
			for each(var currentCargo:CargoVn in All) {
				// Для каждого груза
				// Если такой тип уже был
				var alwaysInArray:Boolean = false;
				for each(var currentCargoType:Array in cargoByTypesArray) {
					if (currentCargoType[0] == currentCargo.Type) {
						currentCargoType[1] += currentCargo.Volume;
						alwaysInArray = true;
					}
				}
				// Если в массив еще не занесен
				if (alwaysInArray != true) {
					cargoByTypesArray.push(new Array(currentCargo.Type, currentCargo.Volume));
				}
			}
			return cargoByTypesArray;
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		public function get Owner():Object {
			return lOwner;
		}
//-----------------------------------------------------------------------------------------------------
	}
}