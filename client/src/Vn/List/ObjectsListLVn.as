package Vn.List {
//-----------------------------------------------------------------------------------------------------
// Список объектов
// С возможностью загрузки данных с сервера через скрипт
//-----------------------------------------------------------------------------------------------------
	import flash.events.Event;
	import flash.events.IOErrorEvent;
	import flash.system.System;
	import Vn.Objects.Var.LoadedObject;
//-----------------------------------------------------------------------------------------------------
	public class ObjectsListLVn extends LoadedObject  {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		private var lObjects:ObjectsListVn;	// Список указателей на объекты
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function ObjectsListLVn() {
			// Конструктор предка
			super();
			// Конструктор
			lObjects = new ObjectsListVn();
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, Sавтоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			lObjects._delete();
			lObjects = null;
			// Деструктор предка
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		public function Clear():void {
			// Очистка данных в списке
			lObjects.Clear();
		}
//-----------------------------------------------------------------------------------------------------
		public function Add(NewObject:Object):void {
			// Добавление объекта в список
			lObjects.Add(NewObject);
		}
//-----------------------------------------------------------------------------------------------------
		public function Delete(vId:uint):void {
			lObjects.Delete(vId);
		}
//-----------------------------------------------------------------------------------------------------
		public function ById(vId:uint):Object {
			// Возвратить указатель на объект по его Id
			return lObjects.ById(vId);
		}
//-----------------------------------------------------------------------------------------------------
		public function KeyById(vId:uint):uint {
			// Возвратить ключ объекта с Id из списка
			return lObjects.KeyById(vId);
		}
//-----------------------------------------------------------------------------------------------------
		public function SortById():void {
			// Сортировка списка объектов по их Id
			lObjects.SortById();
		}
//-----------------------------------------------------------------------------------------------------
		override public function Load():void {
			// Загрузка данных с сервера
			Clear();
			super.Load();
		}
//-----------------------------------------------------------------------------------------------------
		override protected function OnComplete(e:Event):void {
			// Данные об объектах получены
			try {
				var Data:XML = new XML(e.target.data);
			}
			catch (e1:Error) {
				trace(e.target.data);
				trace("------");
				trace(e1.toString());
				trace("------");
			}
			CreateListFromXML(Data);
			System.disposeXML(Data);
		}
//-----------------------------------------------------------------------------------------------------
		override protected function OnRefresh(e:Event):void {
			// Обновленные данные об объектах получены
			try {
				var Data:XML = new XML(e.target.data);
			}
			catch (e1:Error) {
				trace(e.target.data);
				trace("------");
				trace(e1.toString());
				trace("------");
			}
			RefreshListFromXML(Data);
			System.disposeXML(Data);
		}
//-----------------------------------------------------------------------------------------------------
		protected function CreateListFromXML(Data:XML):void {
			// Создание списка по полученным XML-данным
			// Переопределяется в наследниках
		}
//-----------------------------------------------------------------------------------------------------
		protected function RefreshListFromXML(Data:XML):void {
			// Обновление списка по полученным XML-данным
			// Переопределяется в наследниках
			Clear();
			CreateListFromXML(Data);
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		public function get All():Array {
			return lObjects.All;	// Указатель на массив объектов
		}
//-----------------------------------------------------------------------------------------------------
		public function get Length():uint {
			return lObjects.Length;	// Кол-во объектов
		}
//-----------------------------------------------------------------------------------------------------
	}
}