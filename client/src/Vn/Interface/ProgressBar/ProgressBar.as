package Vn.Interface.ProgressBar {
	// Класс
//-----------------------------------------------------------------------------------------------------
	import flash.geom.Matrix;
	import flash.display.GradientType;
	import Vn.Common.SC;
	import Vn.Objects.VnObjectD;
	import Vn.Interface.Text.VnText;
//-----------------------------------------------------------------------------------------------------
	public class ProgressBar extends VnObjectD {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		private var AllPScale:uint;	// Вся шкала прогрессбара (всего единиц в 100%)
		private var CurrentPScale:uint;	// Текущее количество единиц шкалы
		private var Txt:VnText;		// Текст процентов
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function ProgressBar(NewW:uint,NewH:uint) {
			// Конструктор родителя
			super();
			// Конструктор
			SetLocalPosition(NewW/2,NewH/2);
			AllPScale = 0;
			CurrentPScale = 0;
			Txt = new VnText();
			Txt.Text = "0%";
			Txt.Align = VnText.CENTER;
			Txt.textColor = SC.YELLOW;
			Txt.FontSize = 10;
			Txt.y = -1;
			addChild(Txt);
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			removeChild(Txt);
			Txt._delete();
			Txt = null;
			// Деструктор родителя
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		override protected function Draw():void {
			// Отрисовка объекта
			if(AllScale!=0) {
				// Если установлен масштаб - можно рисовать прогресс градиентом
				var Colors:Array = [0x0000FF,0x0000FF];
				var Alphas:Array = [1,0];
				var Pos:uint = 255-(AllScale-CurrentScale)*255/AllScale;	// Приводим текущий показатель шкалы к размеру 255
				var Ratios:Array = [Pos,255];
				graphics.beginGradientFill(GradientType.LINEAR,Colors,Alphas,Ratios);
				Txt.Text = String(Math.floor(CurrentScale*100/AllScale))+"%";
			}
			graphics.lineStyle(1,SC.BLUE,0.5);
			graphics.drawRect(0,0,Width,Height);
		}
//-----------------------------------------------------------------------------------------------------
		override public function Clear():void {
			// Очистка объекта
			graphics.clear();
		}
//-----------------------------------------------------------------------------------------------------
		public function IncreaceAllScale():void {
			// Увеличение общей шкалы на 1
			AllScale++;
		}
//-----------------------------------------------------------------------------------------------------
		public function IncreaceCurrentScale():void {
			// Увеличение текущего показателя шкалы на 1
			CurrentScale++;
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		public function get AllScale():uint {
			return AllPScale;
		}
//-----------------------------------------------------------------------------------------------------
		public function set AllScale(Value:uint):void {
			AllPScale = Value;
			Redraw();
		}
//-----------------------------------------------------------------------------------------------------
		public function get CurrentScale():uint {
			return CurrentPScale;
		}
//-----------------------------------------------------------------------------------------------------
		public function set CurrentScale(Value:uint):void {
			if(Value<=AllScale) {
				CurrentPScale = Value;
				Redraw();
			}
		}
//-----------------------------------------------------------------------------------------------------
	}
}