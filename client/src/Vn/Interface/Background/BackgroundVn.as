package Vn.Interface.Background  {
//-----------------------------------------------------------------------------------------------------
// Подложка для элемента
//-----------------------------------------------------------------------------------------------------
	import Vn.Interplanety;
	import Vn.Objects.VnObjectD;
//-----------------------------------------------------------------------------------------------------
	public class BackgroundVn extends VnObjectD {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		private var lLineColor:uint;			// Цвет обрамляющей линии
		private var lLineAlpha:Number;			// Прозрачность обрамляющей линии
		private var lLineThickness:Number;		// Толщина обрамляющей линии
		private var lBackgroundColor:uint;		// Цвет заливки
		private var lBackgroundAlpha:Number;	// Прозрачность заливки
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function BackgroundVn() {
			// Конструктор предка
			super();
			// Конструктор
			LineColor = 0x000000;
			LineAlpha = 0.1;
			LineThickness = 1.0;
			BackgroundColor = Interplanety.VnUser.Skin.ElementBackgroundColor;
			BackgroundAlpha = Interplanety.VnUser.Skin.ElementAlpha;
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			
			// Деструктор предка
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		override public function SetLocalPosition(NewX:Number,NewY:Number):void {
			super.SetLocalPosition(NewX, NewY);
			Redraw();
		}
//-----------------------------------------------------------------------------------------------------
		override protected function Draw():void {
			// Отрисовка объекта
			// Прямоугольник со скругленными краями по размерам элемента
			if(Rendered==true) {
				graphics.lineStyle(lLineThickness, lLineColor, lLineAlpha);
				// Очертания всего окна (с заполнением)
				graphics.beginFill(lBackgroundColor, lBackgroundAlpha);
				graphics.drawRoundRect(0, 0, Width, Height, 10, 10);
			}
		}
//-----------------------------------------------------------------------------------------------------
		override public function Clear():void {
			// Очистка объекта
			if (Rendered == true) {
				graphics.clear();
			}
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		public function get LineColor():uint {
			return lLineColor;
		}
//-----------------------------------------------------------------------------------------------------
		public function set LineColor(vValue:uint):void {
			lLineColor = vValue;
		}
//-----------------------------------------------------------------------------------------------------
		public function get LineAlpha():Number {
			return lLineAlpha;
		}
//-----------------------------------------------------------------------------------------------------
		public function set LineAlpha(vValue:Number):void {
			lLineAlpha = vValue;
		}
//-----------------------------------------------------------------------------------------------------
		public function get LineThickness():Number {
			return lLineThickness;
		}
//-----------------------------------------------------------------------------------------------------
		public function set LineThickness(vValue:Number):void {
			lLineThickness = vValue;
		}
//-----------------------------------------------------------------------------------------------------
		public function get BackgroundColor():uint {
			return lBackgroundColor;
		}
//-----------------------------------------------------------------------------------------------------
		public function set BackgroundColor(vValue:uint):void {
			lBackgroundColor = vValue;
		}
//-----------------------------------------------------------------------------------------------------
		public function get BackgroundAlpha():Number {
			return lBackgroundAlpha;
		}
//-----------------------------------------------------------------------------------------------------
		public function set BackgroundAlpha(vValue:Number):void {
			lBackgroundAlpha = vValue;
		}
//-----------------------------------------------------------------------------------------------------
	}
}