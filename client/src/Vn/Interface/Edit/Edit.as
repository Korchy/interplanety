package Vn.Interface.Edit {
	// Класс Edit
//-----------------------------------------------------------------------------------------------------
	import flash.events.Event;
	import Vn.Objects.VnObjectS;
	import Vn.Interface.Text.VnText;
//-----------------------------------------------------------------------------------------------------
	public class Edit extends VnObjectS {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		private var TextWindow:VnText;	// Текстовый компонент
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function Edit() {
			// Конструктор предка
			super();
			// Конструктор
			Name = 64;
			ReLoadById(56);	// edit
			// Текстовый элемент
			TextWindow = new VnText();
			TextWindow.Align = VnText.NONE;
			TextWindow.selectable = true;
			TextWindow.Type = VnText.INPUT;
			addChild(TextWindow);
			TextWindow.x = 5;
			TextWindow.width = Width-TextWindow.x*2;
			TextWindow.height = 20;
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			removeChild(TextWindow);
			TextWindow._delete();
			TextWindow = null;
			// Деструктор предка
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		public function set Text(Value:String):void {
			TextWindow.Text = Value;
			dispatchEvent(new Event(Event.CHANGE));
		}
//-----------------------------------------------------------------------------------------------------
		public function get Text():String {
			return TextWindow.Text;
		}
//-----------------------------------------------------------------------------------------------------
		public function set Restrict(Value:String):void {
			TextWindow.restrict = Value;
		}
//-----------------------------------------------------------------------------------------------------
		public function get Restrict():String {
			return TextWindow.restrict;
		}
//-----------------------------------------------------------------------------------------------------
	}
}