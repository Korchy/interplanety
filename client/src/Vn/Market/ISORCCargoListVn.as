package Vn.Market {
//-----------------------------------------------------------------------------------------------------
// Страничный компонент со списком производств на планете для торговли
//-----------------------------------------------------------------------------------------------------
	import Vn.Cargo.CargoListVn;
	import Vn.Cargo.CargoVn;
	import Vn.SpaceObjects.InteractiveSpaceObjectRC;
//	import Vn.Debug.ImgBorder;
	import Vn.Industry.ISOCargoIndicator;
	import Vn.Math.Vector2;
//-----------------------------------------------------------------------------------------------------
	public class ISORCCargoListVn extends CargoListVn {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function ISORCCargoListVn(vSize:Vector2) {
			// Конструктор предка
			super(vSize);
			// Конструктор
			
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			
			// Деструктор предка
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		override protected function OnCargoRefreshed(vOwner:Object):void {
			// При обновлении списка грузов
			// Заполнить список
			for each (var CurrnetCargo:CargoVn in InteractiveSpaceObjectRC(vOwner).CargoManager.All) {
				var CurrentIndicator:ISOCargoIndicator = new ISOCargoIndicator(CurrnetCargo);
				CurrentIndicator.LoadFromOwner();	// Заполнить данными из Owner
//				ImgBorder.DrawBorder(CurrentIndicator);
				Add(CurrentIndicator);
			}
		}
//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
	}
}