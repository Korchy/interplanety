package Vn.SpaceObjects.Orbit {
//-----------------------------------------------------------------------------------------------------
// Контейнер для изображения орбиты.
// Нужен, чтобы удобно взаимодействовать с положением орбиты (без учета поворотов)
//-----------------------------------------------------------------------------------------------------
	import Vn.Objects.VnObjectD;
	import Vn.SpaceObjects.Orbit.OrbitImage;
//-----------------------------------------------------------------------------------------------------
	public class OrbitImageContainer extends VnObjectD {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		private var lOrbitImage:OrbitImage;	// Изображение орбиты
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function OrbitImageContainer() {
			// Конструктор предка
			super();
			// Конструктор
			NeedPlace = true;
			// Т.к. данный класс служит контейнером для орбиты - постоянные размеры 100х100
			SetLocalPosition(100.0,100.0);
			// Изображение для орбиты
			lOrbitImage = new OrbitImage();
			addChild(lOrbitImage);
			}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			// Удалить изображение. Если изобрежение в этот момент перетаскивалось - оно было sddChild к звездной системе
			removeChild(lOrbitImage);
			lOrbitImage._delete();
			lOrbitImage = null;
			// Деструктор предка
			super._delete();
			}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		public function SetRadius(NewL:Number,NewS:Number):void {
			// Установить новые радиусы эллипса
			if(NewL>=0.0&&NewS>=0.0) {
				lOrbitImage.SetRadius(NewL, NewS);
			}
		}
//-----------------------------------------------------------------------------------------------------
		public function SetAngle(NewA:Number):void {
			// Установить новый угол наклона эллипса
			lOrbitImage.SetAngle(NewA);
		}
//-----------------------------------------------------------------------------------------------------
		override public function Redraw():void {
			// Перерисовка объекта
			lOrbitImage.Redraw();
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		public function get Image():OrbitImage {
			return lOrbitImage;
		}
//-----------------------------------------------------------------------------------------------------
	}
}