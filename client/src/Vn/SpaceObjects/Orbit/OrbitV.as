package Vn.SpaceObjects.Orbit {
//-----------------------------------------------------------------------------------------------------
// Орбита виртуальная
//-----------------------------------------------------------------------------------------------------
	import flash.events.Event;
	import Vn.Interface.Window.VnWindow;
	import Vn.SpaceObjects.InteractiveSpaceObjectVO;
//-----------------------------------------------------------------------------------------------------
	public class OrbitV extends InteractiveSpaceObjectVO {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		private static var lStaticInteractiveWindow:VnWindow = null;		// Статический указатель на интерактивное окно
		private static var lStaticInteractiveWindowCreator:OrbitV = null;	// Статический указатель на объект, который создал интерактивное окно
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function OrbitV() {
			// Конструктор предка
			super();
			// Конструктор
			lInteractiveWindowSceneAttach = false;	// Интерактивное окно крепится к интерфейсу
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			// Если эта орбита создавала статическое окно - закрыть окно
			if (lStaticInteractiveWindowCreator == this) lStaticInteractiveWindow.Close();
			// Деструктор предка
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		override protected function CreateWindow():VnWindow {
			// Переопределяем создание окна так, чтобы оно было статическим для всех орбит
			// Если окно уже есть - закрыть
			if (lStaticInteractiveWindow != null) lStaticInteractiveWindow.Close();
			// Создать новое
			var NewWindow:VnWindow = new OrbitParamsWindowVn(this);
			lStaticInteractiveWindow = NewWindow;	// Статическое окно
			lStaticInteractiveWindowCreator = this;	// Создатель статического окна
			lStaticInteractiveWindow.addEventListener(VnWindow.CLOSED, OnStaticWindowClosed);
			return NewWindow;
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------
		private function OnStaticWindowClosed(e:Event):void {
			// При закрытии интерактивного окна
			e.target.removeEventListener(VnWindow.CLOSED, OnStaticWindowClosed);	// Через e.target т.к. в статическом указателе может быть уже другое окно
			if (lStaticInteractiveWindowCreator == this) {
				lStaticInteractiveWindow = null;
				lStaticInteractiveWindowCreator = null;
			}
		}
//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
	}
}