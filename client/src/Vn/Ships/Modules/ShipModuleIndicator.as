package Vn.Ships.Modules {
//-----------------------------------------------------------------------------------------------------
// Класс "Индикатор типа модуля корабля"
//-----------------------------------------------------------------------------------------------------
	import Vn.Indicator.IndicatorVn;
	import Vn.Interface.Text.VnText;
	import Vn.Objects.VnObjectS;
//-----------------------------------------------------------------------------------------------------
	public class ShipModuleIndicator extends IndicatorVn {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		private var lTypeImg:VnObjectS;			// Изображение типа модуля
		private var lFreeVolume:VnText;			// Количество свободного места данного типа
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function ShipModuleIndicator(vModule:ShipModule, vImgId:uint, vFreeVolume:uint) {
			// Конструктор предка
			super(vModule, 30, 15);
			// Конструктор
			lTypeImg = new VnObjectS();
			lTypeImg.ReLoadById(vImgId);
			addChild(lTypeImg);
			lTypeImg.MoveIntoParent(lTypeImg.Width05, Height05);
			lFreeVolume = new VnText();
			addChild(lFreeVolume);
			lFreeVolume.Text = String(vFreeVolume);
			lFreeVolume.x = lTypeImg.Width;
			lFreeVolume.y = (Height - lFreeVolume.Height) / 2.0;
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			removeChild(lTypeImg);
			lTypeImg._delete();
			lTypeImg = null;
			removeChild(lFreeVolume);
			lFreeVolume._delete();
			lFreeVolume = null;
			// Деструктор предка
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		public function set FreeVolume(vValue:uint):void {
			lFreeVolume.Text = String(vValue);
		}
//-----------------------------------------------------------------------------------------------------
		public function get FreeVolume():uint {
			return uint(lFreeVolume.Text);
		}
//-----------------------------------------------------------------------------------------------------
	}
}