package Vn.Ships {
//-----------------------------------------------------------------------------------------------------
// Страничный компонент со списком кораблей на планете
//-----------------------------------------------------------------------------------------------------
	import Vn.Interface.List.ImageListSelectQ;
	import Vn.Interplanety;
	import Vn.Math.Vector2;
	import Vn.Objects.Var.ObjectViewVn;
	import Vn.Scene.StarSystem.StarSystemRealVn;
	import Vn.SpaceObjects.SpaceObject;
//-----------------------------------------------------------------------------------------------------
	public class ShipsListVn extends ImageListSelectQ {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function ShipsListVn(vSize:Vector2) {
			// Конструктор предка
			super(vSize);
			// Конструктор
			
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			
			// Деструктор предка
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		public function Load(vPlanet:SpaceObject):void {
			// Создать список кораблей на планете vPlanet
			var AllShips:Array = StarSystemRealVn(Vn.Interplanety.Universe.CurrentStarSystem).Ships.All;	// Все корабли
			for (var i:uint = 0; i < AllShips.length; i++) {
				if (AllShips[i].PlanetA == AllShips[i].PlanetB && AllShips[i].PlanetA.SpaceObjectId == vPlanet.SpaceObjectId) {
					// Только если корабль находится на планете (A==B) и эта текущая планета
					var ShipM:ObjectViewVn = Ship(AllShips[i]).CreateOView(Ship.VIEW_MARKET);
					Add(ShipM);
				}
			}
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
	}
}