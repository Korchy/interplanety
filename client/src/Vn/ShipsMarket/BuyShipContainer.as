package Vn.ShipsMarket {
//-----------------------------------------------------------------------------------------------------
// Контейнер для продаваемого корабля
//-----------------------------------------------------------------------------------------------------
	import Vn.Math.Vector2;
	import Vn.Objects.VnObjectS;
	import Vn.Objects.VnObjectU;
	import Vn.Ships.ShipModelInfoButton;
//-----------------------------------------------------------------------------------------------------
	public class BuyShipContainer extends VnObjectU {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		public var ShipType:uint;			// Id модели корабля
		public var Pict:VnObjectS;			// Указатель на пиктограмму корабля
		private var SPrice:ShipPrice;			// Цена
		private var Info:ShipModelInfoButton;	// Кнопка "Информация о корабле"
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function BuyShipContainer(vShipType:uint, vPriceType:uint) {
			// Конструктор предка
			super();
			// Конструктор
			ShipType = vShipType;
			// Картинка 40 + инфо 20 + промежуток 2 х 40 + надпись внизу 14
			SetLocalPosition(20+1+10,20+7);
			// Пиктограмма
			Pict = new VnObjectS();
			addChild(Pict);
			// Кнопка информации
			Info = new ShipModelInfoButton(vShipType);
			addChild(Info);
			Info.MoveIntoParent(52,10,true);
			// Цена
			SPrice = new ShipPrice(Width,vPriceType);	// Корабли могут покупаться за золото или кристаллы
			SPrice.MoveInto(new Vector2(Width05,Pict.Height+SPrice.Height05));
			addChild(SPrice);
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			// Цена
			removeChild(SPrice);
			SPrice._delete();
			SPrice = null;
			// Инфо
			removeChild(Info);
			Info._delete();
			Info = null;
			// Картинка
			removeChild(Pict);
			Pict._delete();
			Pict = null;
			// Деструктор предка
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		override public function Update():void {
			// Обновление
			super.Update();
			// Обновить содержимое окна
			Info.Update();
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		public function set Price(Value:uint):void {
			SPrice.Text = String(Value);
			SPrice.TextSize = 10;
		}
//-----------------------------------------------------------------------------------------------------
	}
}