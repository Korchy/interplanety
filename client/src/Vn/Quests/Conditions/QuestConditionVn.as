package Vn.Quests.Conditions {
	// Условие выполнения квеста
//-----------------------------------------------------------------------------------------------------
	import flash.events.Event;
	import Vn.Quests.Conditions.Picts.QuestConditionPictVn;
//-----------------------------------------------------------------------------------------------------
	public class QuestConditionVn {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		protected var lPict:QuestConditionPictVn;		// Пиктограмма с визуальным представлением условия
		protected var lValue:uint;					// Сколько нужно выполнить
		protected var lCurrentValue:uint;			// Сколько выполнено на текущий момент
		protected var lEventType:String;			// Тип события соответствующего условию
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function QuestConditionVn() {
			// Конструктор предка
//			super();
			// Конструктор
			lPict = null;
			lValue = 0;
			lCurrentValue = 0;
			lEventType = "";
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		public function _delete():void {
			// Деструктор
			if(lPict!=null) {
				if(lPict.parent!=null) lPict.parent.removeChild(lPict);
				lPict._delete();
				lPict = null;
			}
			// Деструктор предка
//			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		public function Load(Data:XML):void {
			// Загрузка из XML
			// Переопределяется в наследниках
			
		}
//-----------------------------------------------------------------------------------------------------
		protected function CreatePict():void {
			// Инициализация пиктограммы для условия
			// Переопределяется в наследниках
			
		}
//-----------------------------------------------------------------------------------------------------
		public function QuestEventOccurse(e:Event):void {
			// Произошло событие влияющее на условия выполнения квеста
			// Переопределяется в наследниках
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		public function get Pict():QuestConditionPictVn {
			if(lPict==null) {
				// Создать пиктограмму
				CreatePict();
			}
			return lPict;
		}
//-----------------------------------------------------------------------------------------------------
		public function get Value():uint {
			return lValue;
		}
//-----------------------------------------------------------------------------------------------------
		public function get CurrentValue():uint {
			return lCurrentValue;
		}
//-----------------------------------------------------------------------------------------------------
		public function get EventType():String {
			return lEventType;
		}
//-----------------------------------------------------------------------------------------------------
		public function get Finished():Boolean {
			if(lValue>lCurrentValue) return false;
			else return true;
		}
//-----------------------------------------------------------------------------------------------------
	}
}