package Vn.Quests.Journal {
	// Кнопка вызова информации для отдельного квеста
//-----------------------------------------------------------------------------------------------------
	import flash.events.Event;
	import flash.events.MouseEvent;
	import Vn.Common.LoadStatusVn;
	import Vn.Interface.Button.ButtonW;
	import Vn.Interface.Window.VnWindow;
	import Vn.Quests.QuestVn;
	import Vn.Objects.Var.LoadedObject;
//-----------------------------------------------------------------------------------------------------
	public class QuestInfoButton extends ButtonW {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		public var Quest:QuestVn;		// Квест, вызываемый по этой кнопке
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function QuestInfoButton(vQuest:QuestVn) {
			// Конструктор родителя
			super();
			// Конструктор
			Quest = vQuest;
			WindowFunc.SceneAttach = false;	// Т.к. кнопка в интерфейсе
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			if(Quest.hasEventListener(LoadedObject.LOADED)) Quest.removeEventListener(LoadedObject.LOADED,CreateWindowAfterQuestLoad);
			// Деструктор родителя
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		override protected function CreateWindow():VnWindow {
			// Создать окно
			
			// ??? - переделать на ButtonWL
			if(Quest.Status == LoadStatusVn.LOADED) {
				// Если данные по квесту загружены - создать окно
				var SubWindow:VnWindow = new QuestInfoWindow(Quest);
				SubWindow.Leader = this;
				return SubWindow;
			}
			else {
				// Если данны по квесту еще не загружены - загрузить, а после создать окно
				Quest.addEventListener(LoadedObject.LOADED,CreateWindowAfterQuestLoad);
				Quest.Load();
				return null;
			}
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------
		private function CreateWindowAfterQuestLoad(e:Event):void {
			Quest.removeEventListener(LoadedObject.LOADED,CreateWindowAfterQuestLoad);
			// Т.к. окно не было создано т.к. квест не был загружен - эмулировать повторный клик по кнопке после загрузки квеста
			OnClick(new MouseEvent(MouseEvent.CLICK));
		}
//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------
	}
}