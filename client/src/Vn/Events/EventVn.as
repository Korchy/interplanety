package Vn.Events {
	// Событие с передачей данных
//-----------------------------------------------------------------------------------------------------
	import flash.events.Event;
//-----------------------------------------------------------------------------------------------------
	public class EventVn extends Event {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		private var lData:*;	// Указатель на передаваемые данные (могут быть любого типа, зависит от ситуации)
		// Константы события
		public static const EVENT:String = "EvEvent";	// Базовый идентификатор
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function EventVn(type:String, vData:*=null, bubbles:Boolean=false, cancelable:Boolean=false) {
			// Конструктор предка
			super(type,bubbles,cancelable);
			// Конструктор
			lData = vData;
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		public function _delete():void {
			// Деструктор
			
//			// Деструктор предка
//			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		override public function clone():Event {
			// Переопределение ф-ции clone необходимо при наследовании от Event т.к. движок может отправлять события повторно
			return new EventVn(type, lData, bubbles, cancelable);
		}
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		public function get Data():* {
			return lData;
		}
//-----------------------------------------------------------------------------------------------------
	}
}