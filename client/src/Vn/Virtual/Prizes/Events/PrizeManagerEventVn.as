package Vn.Virtual.Prizes.Events {
	// Событие с передачей данных
//-----------------------------------------------------------------------------------------------------
	import Vn.Events.EventVn;
//-----------------------------------------------------------------------------------------------------
	public class PrizeManagerEventVn extends EventVn {
//-----------------------------------------------------------------------------------------------------
// Переменные
//-----------------------------------------------------------------------------------------------------
		
		// Константы события
		public static const FROM_STORAGE_TO_OBJECT_TRY:String = "FromStorageToObjectTry";			// Провести конвертицию приза из хранилища в объект виртуальной системы
		public static const FROM_STORAGE_TO_OBJECT_SUCCESS:String = "FromStorageToObjectSuccess";	// Конвертация приза из хранилица в объект виртуальной завершена успешно
		public static const FROM_STORAGE_TO_OBJECT_FAIL:String = "FromStorageToObjectFail";			// Ошибка конвертации приза из хранилища в объект виртуальной системы
		public static const FROM_STORAGE_TO_OBJECT_ADD_TO_SYSTEM:String = "FromStorageToObjectAddToSystem";	// Сигнал создать сконвертированный объект в виртуальной системе
//-----------------------------------------------------------------------------------------------------
// Конструктор
//-----------------------------------------------------------------------------------------------------
		public function PrizeManagerEventVn(type:String, vData:*=null, bubbles:Boolean=false, cancelable:Boolean=false) {
			// Конструктор предка
			super(type, vData, bubbles, cancelable);
			// Конструктор
			
		}
//-----------------------------------------------------------------------------------------------------
// Деструктор - вызывать самому, автоматически не вызывается
//-----------------------------------------------------------------------------------------------------
		override public function _delete():void {
			// Деструктор
			
			// Деструктор предка
			super._delete();
		}
//-----------------------------------------------------------------------------------------------------
// Функции
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
// Обработка событий
//-----------------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------------
// Методы get/set для установки значений переменных
//-----------------------------------------------------------------------------------------------------
		
//-----------------------------------------------------------------------------------------------------
	}
}